<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Flores</title>
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css" />

    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.5.0/css/responsive.bootstrap5.min.css" />
    <!-- <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.bootstrap5.min.css" /> -->

</head>

<body>
    <!-- Tabla Ventas  -->
    <div class="container mt-5">
        <h1 class="mb-4">Tabla de Ventas</h1>
        <div class="mb-3">
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addSaleModal">
                Registrar Venta
            </button>
        </div>
        <table id="salesTable" class="display table table-dark table-striped table-bordered ">
            <thead>
                <tr>
                    <!-- <th></th> -->
                    <th>Ticket</th>
                    <th>Productos</th>
                    <th>Cliente</th>
                    <th>Fecha</th>
                    <th>Método Pago</th>
                    <th>Total</th>
                    <th>Monto Pagado</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                <!-- <% sales.forEach(sale=> { %>
                                <tr>
                                    <td>
                                        <%= sale.ticket_number %>
                                    </td>
                                    <td>
                                        <%= sale.products %>
                                    </td>
                                    <td>
                                        <%= sale.id_client %>
                                    </td>
                                    <td>
                                        <%= sale.date %>
                                    </td>
                                    <td>
                                        <%= sale.payment_method %>
                                    </td>
                                    <td>
                                        <%= sale.total_amount_formated %>
                                    </td>
                                    <td>
                                        <%= sale.amount_paid %>
                                    </td>
                                    <td>
                                        <%= sale.status %>
                                    </td>
                                    <td>
                                        <a href="#" class="btn btn-sm btn-primary edit-btn" data-bs-toggle="modal"
                                            data-bs-target="#editModal" data-id="<%= sale.id %>">Editar</a>
                                        &nbsp; &nbsp;
                                        <a href="#" class="btn btn-sm btn-danger delete-btn" data-bs-toggle="modal"
                                            data-bs-target="#deleteModal" data-id="<%= sale.id %>">Eliminar</a>
                                    </td>
                                </tr>
                                <% }) %> -->
            </tbody>
        </table>
    </div>



    <!-- Tabla Clientes  -->
    <div class="container mt-5">
        <h1 class="mb-4">Tabla de Clientes</h1>
        <div class="mb-3">
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#agregarClienteModal">
                Agregar Cliente
            </button>
        </div>
        <table id="clientsTable" class="table table-dark table-striped table-bordered">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Rut</th>
                    <th>Email</th>
                    <th>Celular</th>
                    <th>Dirección</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                <% clients.forEach(client=> { %>
                    <tr>
                        <td>
                            <%= client.name %>
                        </td>
                        <td>
                            <%= client.rut %>
                        </td>
                        <td>
                            <%= client.email %>
                        </td>
                        <td>
                            <%= client.cell_phone %>
                        </td>
                        <td>
                            <%= client.address %>
                        </td>
                        <td>
                            <a href="#" class="btn btn-sm btn-primary edit-btn" data-bs-toggle="modal"
                                data-bs-target="#editClientModal" data-id="<%= client.id %>">Editar</a>
                            &nbsp; &nbsp;
                            <a href="#" class="btn btn-sm btn-danger delete-btn" data-bs-toggle="modal"
                                data-bs-target="#deleteClientModal" data-id="<%= client.id %>">Eliminar</a>
                        </td>
                    </tr>
                    <% }) %>
            </tbody>
        </table>
    </div>

    <!-- Tabla Productos  -->
    <div class="container mt-5">
        <h1 class="mb-4">Tabla de Productos</h1>
        <div class="mb-3">
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addProductModal">
                Agregar Producto
            </button>
        </div>
        <table id="productsTable" class="table table-dark table-striped table-bordered">
            <thead>
                <tr>
                    <th>SKU</th>
                    <th>Nombre</th>
                    <th>Costo</th>
                    <th>Stock</th>
                    <th>Tipo</th>
                    <th>Varante</th>
                    <th>Unidad/Kg</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                <% products.forEach(product=> { %>
                    <tr>
                        <td>
                            <%= product.sku %>
                        </td>
                        <td>
                            <%= product.name %>
                        </td>
                        <td>
                            <%= product.cost_formated %>
                        </td>
                        <td>
                            <%= product.stock_formated %>
                        </td>
                        <td>
                            <%= product.type %>
                        </td>
                        <td>
                            <%= product.variant %>
                        </td>
                        <td>
                            <%= product.measurement %>
                        </td>
                        <td>
                            <a href="#" class="btn btn-sm btn-primary edit-btn" data-bs-toggle="modal"
                                data-bs-target="#editProductModal" data-id="<%= product.id %>">Editar</a>
                            &nbsp; &nbsp;
                            <a href="#" class="btn btn-sm btn-danger delete-btn" data-bs-toggle="modal"
                                data-bs-target="#deleteProductModal" data-id="<%= product.id %>">Eliminar</a>
                        </td>
                    </tr>
                    <% }) %>
            </tbody>
        </table>
    </div>

    <!-- Modal Agregar Producto -->
    <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true"
        data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addProductModalLabel">
                        Agregar Producto
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <form action="/add_product" method="post">
                        <div class="form-group">
                            <label for="name_product">Nombre Producto: </label>
                            <input type="text" name="name_product" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="sku_product">SKU: </label>
                            <input type="text" name="sku_product" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="measurement">UNI/KG:</label>
                            <input type="text" name="measurement" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="cost_product">Costo: </label>
                            <input type="number" name="cost_product" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="type_product">Tipo:</label>
                            <input type="text" name="type_product" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="variant">Variante:</label>
                            <input type="text" name="variant" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="stock">Stock:</label>
                            <input type="number" name="stock" class="form-control" required />
                        </div>
                        <br>
                        <button type="submit" class="btn btn-primary">
                            Agregar
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Agregar Cliente -->
    <div class="modal fade" id="agregarClienteModal" aria-labelledby="agregarClientteModalLabel" aria-hidden="true"
        data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="agregarClienteModalLabel">
                        Agregar Cliente
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <form action="/add_client" method="post">
                        <div class="form-group">
                            <label for="client_name">Nombre: &nbsp; &nbsp; </label>
                            <input type="text" name="client_name" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="client_rut">Rut: &nbsp; &nbsp; </label>
                            <input type="text" name="client_rut" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="client_email">Email: &nbsp; &nbsp; </label>
                            <input type="email" name="client_email" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="cell_phone">Celular: &nbsp; &nbsp; </label>
                            <input type="text" name="cell_phone" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="client_address">Direccion: &nbsp; &nbsp; </label>
                            <input type="text" name="client_address" class="form-control" required />
                        </div>
                        <br>
                        <button type="submit" class="btn btn-primary">
                            Agregar
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Agregar venta-->
    <div class="modal fade" id="addSaleModal" tabindex="-1" aria-labelledby="addSaleModalLabel" aria-hidden="true"
        data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addSaleModalLabel">
                        Agregar Venta
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <!-- <form action="/add_sale" method="post"> -->
                        <div class="row">
                            <div class="col-md-1 ">
                                <label for="id_client_select">Cliente: </label>
                            </div>
                            <div class="col-md-5 ">
                                <div class="form-group">
                                    <select class="form-select" data-live-search="true" aria-label="selectClientSale"
                                        name="id_client_select" id="id_client_select" required>
                                        <% clients.forEach(client=> { %>
                                            <option value=<%=client.id %>><%= client.name %>
                                            </option>
                                            <% }) %>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2 " style="align-content: end;">
                                <label for="sale_date">Fecha Venta:</label>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <input type="date" name="sale_date" id="sale_date" class="form-control" required />
                                </div>
                            </div>
                        </div>
                        <br>
                        <br>
                        <div class="row">
                            <div class="col-md-2 ">
                                <label for="payment_method">Método de Pago: </label>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <input type="text" name="payment_method" id="payment_method" class="form-control"
                                        required />
                                </div>
                            </div>
                            <div class="col-md-2 ">
                                <label for="amount_paid">Monto Pagado: </label>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <input type="number" name="amount_paid" id="amount_paid" class="form-control"
                                        required />
                                </div>
                            </div>

                        </div>
                        <br>
                        <br>
                        <div class="row">
                            <div class="col-md-2 ">
                                <label for="status_sale">Estado: </label>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <input type="text" name="status_sale" id="status_sale" class="form-control"
                                        required />
                                </div>
                            </div>
                            <br>
                            <br>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-md-1 ">
                                <label for="id_product_select">Productos: </label>
                            </div>
                            <div class="col-md-3 ">
                                <select class="form-select" data-live-search="true" aria-label="selectProductsSale"
                                    name="id_product_select" id="id_product_select" required>
                                    <% products.forEach(product=> { %>
                                        <option value="<%= product.id %>">
                                            <%= product.name %>%>
                                        </option>
                                        <% }) %>
                                </select>
                            </div>
                            <div class="col-md-1 ">
                                <label for="quantity">Cantidad:</label>
                            </div>
                            <div class="col-md-1 ">
                                <div class="form-group">
                                    <input type="number" min="1" value="1" name="quantity" class="form-control"
                                        id="quantity" required />
                                </div>
                            </div>

                            <div class="col-md-1 ">
                                <label for="quantity">Precio:</label>
                            </div>
                            <div class="col-md-2 ">
                                <div class="form-group">
                                    <input type="number" min="1" name="product_sale_price" id="product_sale_price"
                                        class="form-control" value="1" required />
                                </div>
                            </div>
                            <div class="col-sm-3 ">
                                <button class="btn btn-danger btn-sm" id="out_product_sale">
                                    - Producto
                                </button>
                                <button class="btn btn-success btn-sm" id="add_product_sale">
                                    + Producto
                                </button>
                            </div>
                        </div>
                        <br>
                        <br>
                        <div class="row">
                            <div class="container mt-12">
                                <div class="table-responsive">
                                    <table id="productSaleTable" class="table table-dark table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>Producto</th>
                                                <th>Cantidad</th>
                                                <th>Precio Unitario</th>
                                                <th>Sub Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                        <br>
                    </div>
                    <div class="row">
                        <div class="col-md-12 ">
                            <button class="btn btn-primary" id="button_add_product_sale">
                                Agregar venta
                            </button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <!-- Modal Delete Sale -->
    <div class="modal fade" id="deleteSaleModal" tabindex="-1" aria-labelledby="deleteSaleModalLabel"
        aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteSaleModalLabel">
                        Eliminar Cliente
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Está seguro de que desea eliminar la venta ?</p>
                </div>
                <div class="modal-footer">
                    <form id="deleteFormSale" method="post" action>
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">
                            Cancelar
                        </button>
                        &nbsp;
                        <button type="submit" class="btn btn-success">
                            Confirmar
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <!-- Modal Delete Product -->
    <div class="modal fade" id="deleteProductModal" tabindex="-1" aria-labelledby="deleteProductModalLabel"
        aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteProductModalLabel">
                        Eliminar Product
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Está seguro de que desea eliminar el producto ?</p>
                </div>
                <div class="modal-footer">
                    <form id="deleteFormProduct" method="post" action>
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">
                            Cancelar
                        </button>
                        &nbsp;
                        <button type="submit" class="btn btn-success">
                            Confirmar
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Delete Client -->
    <div class="modal fade" id="deleteClientModal" tabindex="-1" aria-labelledby="deleteClientModalLabel"
        aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteClientModalLabel">
                        Eliminar Cliente
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Está seguro de que desea eliminar el cliente ?</p>
                </div>
                <div class="modal-footer">
                    <form id="deleteFormClient" method="post" action>
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">
                            Cancelar
                        </button>
                        &nbsp;
                        <button type="submit" class="btn btn-success">
                            Confirmar
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Editar Cliente -->
    <div class="modal fade" id="editClientModal" tabindex="-1" aria-labelledby="editClientModalLabel" aria-hidden="true"
        data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editClientModalLabel">
                        Editar Cliente
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <form id="editClienteForm" method="post">
                        <div class="form-group">
                            <label for="client_name">Nombre: &nbsp; &nbsp; </label>
                            <input type="text" name="client_name" class="form-control" id="client_name_edit" required />
                        </div>
                        <div class="form-group">
                            <label for="client_rut">Rut: &nbsp; &nbsp; </label>
                            <input type="text" name="client_rut" class="form-control" id="client_rut_edit" required />
                        </div>
                        <div class="form-group">
                            <label for="client_email">Email: &nbsp; &nbsp; </label>
                            <input type="email" name="client_email" class="form-control" id="client_email_edit"
                                required />
                        </div>
                        <div class="form-group">
                            <label for="cell_phone">Celular: &nbsp; &nbsp; </label>
                            <input type="text" name="cell_phone" class="form-control" id="cell_phone_edit" required />
                        </div>
                        <div class="form-group">
                            <label for="client_address">Direccion: &nbsp; &nbsp; </label>
                            <input type="text" name="client_address" class="form-control" id="client_address_edit"
                                required />
                        </div>
                        <br>
                        <button type="submit" class="btn btn-primary">
                            Guardar Cambios
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Editar Producto -->
    <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel"
        aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProductModalLabel">
                        Editar Producto
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm" method="post">
                        <div class="form-group">
                            <label for="name_product">Nombre Producto: &nbsp; &nbsp; </label>
                            <input type="text" name="name_product" class="form-control" id="name_product_edit"
                                required />
                        </div>
                        <div class="form-group">
                            <label for="sku_product">SKU: &nbsp; &nbsp; </label>
                            <input type="text" name="sku_product" class="form-control" id="sku_product_edit" required />
                        </div>
                        <div class="form-group">
                            <label for="measurement">UNI/KG: &nbsp; &nbsp; </label>
                            <input type="text" name="measurement" class="form-control" id="measurement_edit" required />
                        </div>
                        <div class="form-group">
                            <label for="cost_product">Costo: &nbsp; &nbsp; </label>
                            <input type="number" name="cost_product" class="form-control" id="cost_product_edit"
                                required />
                        </div>
                        <div class="form-group">
                            <label for="tipo">Tipo: &nbsp; &nbsp; </label>
                            <input type="text" name="type_product" class="form-control" id="type_product_edit"
                                required />
                        </div>
                        <div class="form-group">
                            <label for="variant">Variante: &nbsp; &nbsp; </label>
                            <input type="text" name="variant" class="form-control" id="variant_edit" required />
                        </div>
                        <div class="form-group">
                            <label for="stock">Stock: &nbsp; &nbsp; </label>
                            <input type="number" name="stock" class="form-control" id="stock_edit" required />
                        </div>
                        <br>
                        <button type="submit" class="btn btn-primary">
                            Guardar Cambios
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/js/bootstrap.min.js"></script>


    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>


    <!-- <script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.2.9/js/responsive.bootstrap5.min.js"></script> -->

    <script src="https://cdn.datatables.net/responsive/2.5.0/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.5.0/js/responsive.bootstrap5.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.2/moment.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Inicializar DataTables
            let sales_table = new DataTable('#salesTable', {
                ajax: '/sales',
                responsive: true, // Hacer la tabla responsiva
                pageLength: 10, // Número de filas por página
                processing: true,
                language: {
                    // Traducciones al español (puedes personalizarlas según tus necesidades)
                    lengthMenu: "Mostrar _MENU_ registros por página",
                    zeroRecords: "No se encontraron resultados",
                    info: " Página _PAGE_ de _PAGES_",
                    infoEmpty: "No hay registros disponibles",
                    infoFiltered: "(filtrado de _MAX_ registros totales)",
                    search: "Buscar Ventas:",
                    paginate: {
                        first: "Primero",
                        last: "Último",
                        next: "Siguiente",
                        previous: "Anterior",
                    },
                },

                columns: [
                    { data: 'ticket_number' },
                    {
                        data: 'products', render: function (data, type, row) {
                            let product_list = ''

                            data.forEach((element, index) => {
                                product_list = `${product_list}\n
                                    <div class="bg-ligth border">
                                        <dl>
                                    <dt> ${element.name}</dt>
                                    <dt> Precio: ${element.product_sale_price_formated} </dt>
                                    <dt> Cantidad: ${element.quantity}</dt>
                                    <dt> Sub Total: $ ${element.sub_total_formated}</dt>
                                    </dl>
                                        </div>
                                    `
                            });
                            return product_list

                        }
                    },
                    { data: 'name' },
                    { data: 'date' },
                    { data: 'payment_method' },
                    { data: 'total_amount_formated' },
                    { data: 'amount_paid_formated' },
                    { data: 'status' },
                    {
                        data: 'id', render: function (data, type, row) {
                            console.log(row)

                            return `  <a href="#" class="btn btn-sm btn-primary edit-btn" data-bs-toggle="modal"
                                data-bs-target="#editClientModal" data-id="<%= data %>">Editar</a>
                            &nbsp; &nbsp;
                            <a href="#" class="btn btn-sm btn-danger delete-btn" data-bs-toggle="modal"
                                data-bs-target="#deleteSaleModal" data-id="${row.id}">Eliminar</a>
                        `
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 3,
                        render: DataTable.render.date()
                    }
                ],
                order: [[1, 'desc']]
            });
            // Restringir la búsqueda para que no sea sensible a mayúsculas/minúsculas
            $.fn.dataTable.ext.type.search.string = function (data) {
                return !data
                    ? ""
                    : typeof data === "string"
                        ? data
                            .replace(/έ/g, "ε")
                            .replace(/ύ/g, "υ")
                            .replace(/ό/g, "ο")
                            .replace(/ώ/g, "ω")
                            .replace(/ά/g, "α")
                            .replace(/ί/g, "ι")
                            .replace(/ή/g, "η")
                            .replace(/έ/g, "ε")
                            .replace(/ς/g, "σ")
                            .replace(/ϊ/g, "ι")
                            .replace(/ΰ/g, "υ")
                            .replace(/ϋ/g, "υ")
                            .replace(/ΐ/g, "ι")
                        : data;
            };


            // Formatting function for row details - modify as you need
            // function format(d) {
            //     // `d` is the original data object for the row
            //     console.log(d)
            //     let productsDetails = ``
            //     d.products.forEach(element => {
            //         productsDetails = `${productsDetails}\n
            //         <dl>
            //         <dt>Producto: ${element.name}</dt>
            //         <dt>Precio: $ ${element.product_sale_price_formated} </dt>
            //         <dt>Cantidad: ${element.quantity}</dt>
            //         <dt>Sub Total: $ ${element.sub_total_formated}</dt>
            //         </dl>
            //         `
            //     });
            //     console.log(productsDetails)
            //     return productsDetails;
            //     // return (
            //     //     '<dl>' +
            //     //     '<dt>Full name:</dt>' +
            //     //     '<dd>' +
            //     //     d.date +
            //     //     '</dd>' +
            //     //     '<dt>Extension number:</dt>' +
            //     //     '<dd>' +
            //     //     d.status +
            //     //     '</dd>' +
            //     //     '<dt>Extra info:</dt>' +
            //     //     '<dd>And any further details here (images etc)...</dd>' +
            //     //     '</dl>'
            //     // );
            // }


            // Add event listener for opening and closing details
            // sales_table.on('click', 'td.dt-control', function (e) {
            //     let tr = e.target.closest('tr');
            //     let row = sales_table.row(tr);

            //     if (row.child.isShown()) {
            //         // This row is already open - close it
            //         row.child.hide();
            //     }
            //     else {
            //         // Open this row
            //         row.child(format(row.data())).show();
            //     }
            // });

        });

        document.addEventListener("DOMContentLoaded", function () {
            var data = []
            let total_amount_product = 0
            var table2 = $('#productSaleTable').DataTable({
                responsive: true, // Hacer la tabla responsiva
                pageLength: 10, // Número de filas por página
                language: {
                    // Traducciones al español (puedes personalizarlas según tus necesidades)
                    search: "Buscar productos agregados:",
                    lengthMenu: "Mostrar _MENU_ registros por página",
                    zeroRecords: "No se encontraron resultados",
                    info: " Página _PAGE_ de _PAGES_",
                    infoEmpty: "No hay registros disponibles",
                    infoFiltered: "(filtrado de _MAX_ registros totales)",
                    paginate: {
                        first: "Primero",
                        last: "Último",
                        next: "Siguiente",
                        previous: "Anterior",
                    },
                },
                data: data,
                columns: [
                    { data: 'name' },
                    { data: 'quantity' },
                    { data: 'product_sale_price_formated' },
                    { data: 'sub_total_formated' }
                ],
            })

            // Restringir la búsqueda para que no sea sensible a mayúsculas/minúsculas
            $.fn.dataTable.ext.type.search.string = function (data) {
                return !data
                    ? ""
                    : typeof data === "string"
                        ? data
                            .replace(/έ/g, "ε")
                            .replace(/ύ/g, "υ")
                            .replace(/ό/g, "ο")
                            .replace(/ώ/g, "ω")
                            .replace(/ά/g, "α")
                            .replace(/ί/g, "ι")
                            .replace(/ή/g, "η")
                            .replace(/έ/g, "ε")
                            .replace(/ς/g, "σ")
                            .replace(/ϊ/g, "ι")
                            .replace(/ΰ/g, "υ")
                            .replace(/ϋ/g, "υ")
                            .replace(/ΐ/g, "ι")
                        : data;
            };

            function formatAmount(number) {
                // Convertir el número a formato con separadores de miles
                const formattedNumber = number.toLocaleString('es-CL', {
                    style: 'currency',
                    currency: 'CLP'
                });

                return formattedNumber;
            }

            $("#add_product_sale").on('click', function () {
                let id = $("#id_product_select").val()
                let quantity = $("#quantity").val();
                let product_sale_price = $("#product_sale_price").val();
                let product_sale_price_formated = formatAmount(Number(product_sale_price));



                let sub_total = product_sale_price * quantity;
                let sub_total_formated = formatAmount(Number(sub_total));
                console.log(sub_total_formated);
                // // // Obtener los datos de la venta seleccionada y mostrarlos en el formulario de edición
                fetch(`/edit_product/${id}`)
                    .then((response) => response.json())
                    .then((dataProduct) => {
                        const rowToAdd = {
                            id: dataProduct.id,
                            name: dataProduct.name,
                            cost: dataProduct.cost,
                            stock: dataProduct.stock,
                            type: dataProduct.type,
                            variant: dataProduct.variant,
                            measurement: dataProduct.measurement,
                            product_sale_price: product_sale_price,
                            product_sale_price_formated: product_sale_price_formated,
                            stock_formated: dataProduct.stock_formated,
                            quantity: quantity,
                            subTotal: sub_total,
                            sub_total_formated: sub_total_formated
                        }
                        total_amount_product += rowToAdd.subTotal;
                        data.push(rowToAdd)
                        table2.row.add(rowToAdd).draw(false);
                        // $('#productSaleTable').row.add(rowToAdd).draw(false);
                        console.log(data)
                        // console.log(dataProduct)
                    })
                    .catch((error) => {
                        console.error(
                            "Error al obtener los datos de la venta:",
                            error
                        )
                    });
            });

            $("#button_add_product_sale").on('click', async function () {
                let client = $("#id_client_select").val();
                let sales_date = $("#sale_date").val();
                let status_sale = $("#status_sale").val();
                let payment_method = $("#payment_method").val();
                let amount_paid_sale = $("#amount_paid").val();
                let total_amount = total_amount_product;

                if (client === '' || client === null || client === undefined) {
                    alert('Debes seleccionar un cliente')
                    return;
                }

                if (sales_date === '' || sales_date === null || sales_date === undefined) {
                    alert('Debes seleccionar una fecha')
                    return;
                }

                if (payment_method === '' || payment_method === null || payment_method === undefined) {
                    alert('Debes ingresar un medio de pago')
                    return;
                }

                if (amount_paid_sale === '' || amount_paid_sale === null || amount_paid_sale === undefined) {
                    alert('Debes ingresar un monto pagado')
                    return;
                }

                if (data.length === 0) {
                    alert('Debes agregar productos ')
                    return;
                };
                let auxProduct = {
                    products: data,
                    sales_date: sales_date,
                    id_client_select: client,
                    status_sale: status_sale,
                    payment_method: payment_method,
                    total_amount: total_amount,
                    amount_paid: amount_paid_sale,

                };
                console.log("auxProduct", auxProduct)
                try {
                    const response = await $.ajax({
                        type: "POST",
                        url: '/add_sale/',
                        dataType: "json",
                        data: auxProduct
                    });

                    if (response.success) {
                        console.log("Registro creado exitosamente.");
                        location.reload();
                        // Mostrar algún mensaje de confirmación al usuario si lo deseas
                    } else {
                        console.error(
                            "Error al crear la venta:",
                            response.message
                        );
                        alert("Error al eliminar el registro");
                    }
                    // Actualizar la tabla después de eliminar el registro
                    // $('#ventasTable').DataTable().ajax.reload(null, false);
                } catch (error) {
                    console.error(
                        "Error al eliminar el registro:",
                        error.stack
                    );
                    console.log(error);
                    alert("Error al eliminar el registro");
                }
            })

        })
        document.addEventListener("DOMContentLoaded", function () {
            // Inicializar DataTables
            $("#clientsTable").DataTable({
                responsive: true, // Hacer la tabla responsiva
                pageLength: 10, // Número de filas por página
                language: {
                    // Traducciones al español (puedes personalizarlas según tus necesidades)
                    lengthMenu: "Mostrar _MENU_ registros por página",
                    zeroRecords: "No se encontraron resultados",
                    info: " Página _PAGE_ de _PAGES_",
                    infoEmpty: "No hay registros disponibles",
                    infoFiltered: "(filtrado de _MAX_ registros totales)",
                    search: "Buscar Cliente:",
                    paginate: {
                        first: "Primero",
                        last: "Último",
                        next: "Siguiente",
                        previous: "Anterior",
                    },
                },
            });

            // Restringir la búsqueda para que no sea sensible a mayúsculas/minúsculas
            $.fn.dataTable.ext.type.search.string = function (data) {
                return !data
                    ? ""
                    : typeof data === "string"
                        ? data
                            .replace(/έ/g, "ε")
                            .replace(/ύ/g, "υ")
                            .replace(/ό/g, "ο")
                            .replace(/ώ/g, "ω")
                            .replace(/ά/g, "α")
                            .replace(/ί/g, "ι")
                            .replace(/ή/g, "η")
                            .replace(/έ/g, "ε")
                            .replace(/ς/g, "σ")
                            .replace(/ϊ/g, "ι")
                            .replace(/ΰ/g, "υ")
                            .replace(/ϋ/g, "υ")
                            .replace(/ΐ/g, "ι")
                        : data;
            };
        });

        document.addEventListener("DOMContentLoaded", function () {
            // Inicializar DataTables
            $("#productsTable").DataTable({
                responsive: true, // Hacer la tabla responsiva
                pageLength: 10, // Número de filas por página
                language: {
                    // Traducciones al español (puedes personalizarlas según tus necesidades)
                    lengthMenu: "Mostrar _MENU_ registros por página",
                    zeroRecords: "No se encontraron resultados",
                    info: " Página _PAGE_ de _PAGES_",
                    infoEmpty: "No hay registros disponibles",
                    infoFiltered: "(filtrado de _MAX_ registros totales)",
                    search: "Buscar Producto:",
                    paginate: {
                        first: "Primero",
                        last: "Último",
                        next: "Siguiente",
                        previous: "Anterior",
                    },
                },
            });

            // Restringir la búsqueda para que no sea sensible a mayúsculas/minúsculas
            $.fn.dataTable.ext.type.search.string = function (data) {
                return !data
                    ? ""
                    : typeof data === "string"
                        ? data
                            .replace(/έ/g, "ε")
                            .replace(/ύ/g, "υ")
                            .replace(/ό/g, "ο")
                            .replace(/ώ/g, "ω")
                            .replace(/ά/g, "α")
                            .replace(/ί/g, "ι")
                            .replace(/ή/g, "η")
                            .replace(/έ/g, "ε")
                            .replace(/ς/g, "σ")
                            .replace(/ϊ/g, "ι")
                            .replace(/ΰ/g, "υ")
                            .replace(/ϋ/g, "υ")
                            .replace(/ΐ/g, "ι")
                        : data;
            };
        });

        document.addEventListener("DOMContentLoaded", function () {
            /** editar cliente modal*/
            $("#editClientModal").on("show.bs.modal", function (event) {
                const button = $(event.relatedTarget); // Botón que activó el modal
                const id = button.data("id"); // Extraer el ID de los datos atributos del botón
                const form = document.getElementById("editClienteForm");
                form.action = `/edit_client/${id}` // Actualizar el atributo 'action' del formulario
                console.log("el id", id)
                // Obtener los datos de la venta seleccionada y mostrarlos en el formulario de edición
                fetch(`/edit_client/${id}`)
                    .then((response) => response.json())
                    .then((data) => {
                        form.elements.client_name_edit.value = data.name;
                        form.elements.client_rut_edit.value = data.rut;
                        form.elements.client_email_edit.value = data.email;
                        form.elements.cell_phone_edit.value = data.cell_phone;
                        form.elements.client_address_edit.value = data.address;
                    })
                    .catch((error) =>
                        console.error(
                            "Error al obtener los datos de la venta:",
                            error
                        )
                    );
            });

            /** editar cliente modal*/
            $("#editProductModal").on("show.bs.modal", function (event) {
                const button = $(event.relatedTarget); // Botón que activó el modal
                const id = button.data("id"); // Extraer el ID de los datos atributos del botón
                const form = document.getElementById("editProductForm");
                form.action = `/edit_product/${id}` // Actualizar el atributo 'action' del formulario
                console.log("el id", id)
                // Obtener los datos de la venta seleccionada y mostrarlos en el formulario de edición
                fetch(`/edit_product/${id}`)
                    .then((response) => response.json())
                    .then((data) => {
                        console.log(data)
                        form.elements.name_product_edit.value = data.name;
                        form.elements.sku_product.value = data.sku;
                        form.elements.measurement_edit.value = data.measurement;
                        form.elements.cost_product_edit.value = data.cost;
                        form.elements.type_product_edit.value = data.type;
                        form.elements.variant_edit.value = data.variant;
                        form.elements.stock_edit.value = data.stock;
                    })
                    .catch((error) =>
                        console.error(
                            "Error al obtener los datos de la venta:",
                            error
                        )
                    );
            });

             // Obtener el formulario de eliminación cuando se muestra el modal eliminar
             $("#deleteSaleModal").on("show.bs.modal", function (event) {
                const button = $(event.relatedTarget); // Botón que activó el modal
                const id = button.data("id"); // Extraer el ID de los datos atributos del botón
                console.log("ID del registro a eliminar:", id);
                const form = document.getElementById("deleteFormSale");
                form.action = `/delete_sale/${id}`; // Actualizar el atributo 'action' del formulario
                console.log(form.action)
            });



            // Obtener el formulario de eliminación cuando se muestra el modal eliminar
            $("#deleteClientModal").on("show.bs.modal", function (event) {
                const button = $(event.relatedTarget); // Botón que activó el modal
                const id = button.data("id"); // Extraer el ID de los datos atributos del botón
                console.log("ID del registro a eliminar:", id);
                const form = document.getElementById("deleteFormClient");
                form.action = `/delete_client/${id}`; // Actualizar el atributo 'action' del formulario
                console.log(form.action)
            });

            // Obtener el formulario de eliminación cuando se muestra el modal eliminar
            $("#deleteProductModal").on("show.bs.modal", function (event) {
                const button = $(event.relatedTarget); // Botón que activó el modal
                const id = button.data("id"); // Extraer el ID de los datos atributos del botón
                console.log("ID del registro a eliminar:", id);
                const form = document.getElementById("deleteFormProduct");
                form.action = `/delete_product/${id}`; // Actualizar el atributo 'action' del formulario
                console.log(form.action)
            });

            // Eliminar el registro al enviar el formulario
            $("#deleteFormClient").on("submit", async function (event) {
                event.preventDefault();
                const url = this.action;
                console.log("URL de la solicitud DELETE:", url);
                // Realizar la solicitud de eliminación mediante AJAX
                try {
                    const response = await $.ajax({
                        type: "DELETE",
                        url: url,
                        dataType: "json",
                    });

                    if (response.success) {
                        console.log("Registro eliminado exitosamente.");
                        location.reload();
                        // Mostrar algún mensaje de confirmación al usuario si lo deseas
                    } else {
                        console.error(
                            "Error al eliminar el registro:",
                            response.message
                        );
                        alert("Error al eliminar el registro");
                    }
                    // Actualizar la tabla después de eliminar el registro
                    // $('#ventasTable').DataTable().ajax.reload(null, false);
                } catch (error) {
                    console.error(
                        "Error al eliminar el registro:",
                        error.stack
                    );
                    console.log(error);
                    alert("Error al eliminar el registro");
                }
            });

            // Eliminar el registro al enviar el formulario
            $("#deleteFormProduct").on("submit", async function (event) {
                event.preventDefault();
                const url = this.action;
                console.log("URL de la solicitud DELETE:", url);
                // Realizar la solicitud de eliminación mediante AJAX
                try {
                    const response = await $.ajax({
                        type: "DELETE",
                        url: url,
                        dataType: "json",
                    });

                    if (response.success) {
                        console.log("Registro eliminado exitosamente.");
                        location.reload();
                        // Mostrar algún mensaje de confirmación al usuario si lo deseas
                    } else {
                        console.error(
                            "Error al eliminar el registro:",
                            response.message
                        );
                        alert("Error al eliminar el registro");
                    }
                    // Actualizar la tabla después de eliminar el registro
                    // $('#ventasTable').DataTable().ajax.reload(null, false);
                } catch (error) {
                    console.error(
                        "Error al eliminar el registro:",
                        error.stack
                    );
                    console.log(error);
                    alert("Error al eliminar el registro");
                }
            });

            $("#deleteFormSale").on("submit", async function (event) {
                event.preventDefault();
                const url = this.action;
                console.log("URL de la solicitud DELETE:", url);
                // Realizar la solicitud de eliminación mediante AJAX
                try {
                    const response = await $.ajax({
                        type: "DELETE",
                        url: url,
                        dataType: "json",
                    });

                    if (response.success) {
                        console.log("Registro eliminado exitosamente.");
                        location.reload();
                        // Mostrar algún mensaje de confirmación al usuario si lo deseas
                    } else {
                        console.error(
                            "Error al eliminar el registro:",
                            response.message
                        );
                        alert("Error al eliminar el registro");
                    }
                    // Actualizar la tabla después de eliminar el registro
                    // $('#ventasTable').DataTable().ajax.reload(null, false);
                } catch (error) {
                    console.error(
                        "Error al eliminar el registro:",
                        error.stack
                    );
                    console.log(error);
                    alert("Error al eliminar el registro");
                }
            });

        });
    </script>
</body>

</html>